{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jmadd\\\\OneDrive\\\\Pictures\\\\Screenshots\\\\CPSC_CAPSTONE\\\\Campus-Security\\\\CSPC_Capstone\\\\cnu-security\\\\src\\\\components\\\\HeroSection.js\";\nimport '../App.css';\nimport Button from '@mui/material/Button';\nimport './HeroSection.css';\nimport React, { useState } from 'react';\nimport { getCardHeaderUtilityClass } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HeroSection() {\n  const getPosition = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(show, posError);\n    } else {\n      alert(\"Sorry, \");\n    }\n  };\n\n  const posError = () => {\n    if (navigator.permissions) {\n      navigator.permissions.query({\n        name: 'geolocation'\n      }).then(res => {\n        if (res.state === 'denied') {\n          alert(\"enable location permission\");\n        }\n      });\n    } else {\n      alert(\"unable to access your location\");\n    }\n  };\n\n  const showPosition = position => {\n    let lat = position.coords.latitude;\n    let long = position.coords.longitude;\n    props.set_lat(lat);\n    props.set_long(long);\n    convertToAddress(lat, long);\n  };\n\n  const convertToAddress = (lat, lon) => {\n    fetch(\"http://localhost:3000/googlemaps\").then(res => res.json()).then(obj => getCardHeaderUtilityClass(lat, long, obj.api_keys));\n  };\n\n  const getAddress = (lat, long, googleKey) => {\n    fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${long}&key=${googleKey}`).then(res => res.json()).then(address => setZip(address));\n  };\n\n  const setZip = address => {\n    let city = address.results[5].address_components[2].short_name;\n    let state = address.results[5].address_components[4].short_name;\n    let postal = address.results[5].address_components[0].short_name;\n    props.set_city(city);\n    props.set_state(state);\n    props.set_postal_code(postal);\n  }; // Converting city and state manual entries to lat/long:\n  // Function that will convert city & state to approximate user lat/long coordinates from manual entry\n\n\n  const processManualLocation = () => {\n    if (props.userState !== \"\" && props.userCity !== \"\") {\n      let city = props.userCity; // manual lat entry is already in store state\n\n      let state = props.userPostalCode; // manual long entry is already in store state\n      // This fetch uses the API key stored in your fron-end .env file \"process.env.REACT_APP_googleKey\"\n\n      let url = `https://maps.googleapis.com/maps/api/geocode/json?address=+${city},+${state}&key=${process.env.REACT_APP_googleKey}`;\n      fetch(url).then(res => res.json()).then(res => {\n        if (res.status === \"OK\") {\n          getUserCoords(res.results);\n        } else if (res.status === \"ZERO_RESULTS\") {\n          alert('Unable to process this location. Please revise location fields and try submitting again.');\n        }\n      });\n    } else {\n      alert('Please ensure State and City are provided.');\n    }\n  }; // Obtaining and dispatching lat and long coords from google geocoding API response\n\n\n  const getUserCoords = googleRes => {\n    let lat = googleRes[0].geometry.location.lat; // You have obtained latitude coordinate!\n\n    let long = googleRes[0].geometry.location.lng; // You have obtained longitude coordinate!\n\n    props.set_lat(lat); // dispatching to store state\n\n    props.set_long(long); //dispatching to store state\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-container\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => getPosition(),\n      style: {\n        top: \"-150px\",\n        color: \"#fff\",\n        width: \"200px\",\n        borderColor: 'white',\n        backgroundColor: \"#700f0f\",\n        padding: \"8px 26px\",\n        fontSize: \"18px\"\n      },\n      children: \"Notify Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"call\",\n      style: {\n        top: \"-130px\",\n        color: \"#fff\",\n        width: \"200px\",\n        backgroundColor: \"#d1c158\",\n        padding: \"8px 26px\",\n        fontSize: \"18px\"\n      },\n      children: \"Call CNU PD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        top: \"-110px\",\n        color: \"#fff\",\n        backgroundColor: \"#116319\",\n        width: \"200px\",\n        padding: \"8px 26px\",\n        fontSize: \"18px\"\n      },\n      href: \"/more\",\n      children: \"More:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        top: \"-50px\",\n        color: \"#fff\",\n        borderColor: \"#fff\",\n        width: \"200px\",\n        backgroundColor: \"transparent\",\n        padding: \"8px 26px\",\n        fontSize: \"18px\"\n      },\n      variant: \"outlined\",\n      children: [\"Tutorial \", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-play-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_c = HeroSection;\nexport default HeroSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeroSection\");","map":{"version":3,"names":["Button","React","useState","getCardHeaderUtilityClass","HeroSection","getPosition","navigator","geolocation","getCurrentPosition","show","posError","alert","permissions","query","name","then","res","state","showPosition","position","lat","coords","latitude","long","longitude","props","set_lat","set_long","convertToAddress","lon","fetch","json","obj","api_keys","getAddress","googleKey","address","setZip","city","results","address_components","short_name","postal","set_city","set_state","set_postal_code","processManualLocation","userState","userCity","userPostalCode","url","process","env","REACT_APP_googleKey","status","getUserCoords","googleRes","geometry","location","lng","top","color","width","borderColor","backgroundColor","padding","fontSize"],"sources":["C:/Users/jmadd/OneDrive/Pictures/Screenshots/CPSC_CAPSTONE/Campus-Security/CSPC_Capstone/cnu-security/src/components/HeroSection.js"],"sourcesContent":["import '../App.css'\r\nimport Button from '@mui/material/Button';\r\nimport './HeroSection.css'\r\nimport React, { useState } from 'react';\r\nimport { getCardHeaderUtilityClass } from '@mui/material';\r\n\r\n\r\n\r\n\r\n\r\nfunction HeroSection() {\r\n  const getPosition=()=>{\r\n    if(navigator.geolocation){\r\n      navigator.geolocation.getCurrentPosition(show, posError);\r\n    }else{\r\n      alert(\"Sorry, \");\r\n    }\r\n  }\r\n  const posError=()=>{\r\n    if (navigator.permissions){\r\n      navigator.permissions.query({name:'geolocation'}).then(res => {\r\n        if (res.state ==='denied'){\r\n          alert(\"enable location permission\")\r\n        }\r\n      })\r\n    } else{\r\n      alert(\"unable to access your location\")\r\n    }\r\n  }\r\n  const showPosition=(position)=>{\r\n    let lat = position.coords.latitude\r\n    let long= position.coords.longitude\r\n\r\n    props.set_lat(lat)\r\n    props.set_long(long)\r\n    convertToAddress(lat,long)\r\n  }\r\n  const convertToAddress=(lat,lon)=>{\r\n    fetch(\"http://localhost:3000/googlemaps\").then(res=>res.json())\r\n    .then(obj => getCardHeaderUtilityClass(lat,long,obj.api_keys))\r\n  }\r\n\r\n  const getAddress = (lat, long, googleKey) => {\r\n    fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${long}&key=${googleKey}`)\r\n    .then(res => res.json())\r\n    .then(address => setZip(address))\r\n    }\r\n    const setZip = (address) => {\r\n      let city = address.results[5].address_components[2].short_name\r\n      let state = address.results[5].address_components[4].short_name\r\n      let postal = address.results[5].address_components[0].short_name\r\n      props.set_city(city)\r\n      props.set_state(state)\r\n      props.set_postal_code(postal)\r\n      }\r\n      // Converting city and state manual entries to lat/long:\r\n      \r\n      // Function that will convert city & state to approximate user lat/long coordinates from manual entry\r\n      const processManualLocation = () => {\r\n      if (props.userState !== \"\" && props.userCity !== \"\") {\r\n      let city = props.userCity // manual lat entry is already in store state\r\n      let state = props.userPostalCode // manual long entry is already in store state\r\n      // This fetch uses the API key stored in your fron-end .env file \"process.env.REACT_APP_googleKey\"\r\n      let url = `https://maps.googleapis.com/maps/api/geocode/json?address=+${city},+${state}&key=${process.env.REACT_APP_googleKey}`\r\n      fetch(url)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n      if (res.status === \"OK\") {\r\n      getUserCoords(res.results)\r\n      } else if (res.status === \"ZERO_RESULTS\") {\r\n      alert('Unable to process this location. Please revise location fields and try submitting again.')\r\n      }\r\n      })\r\n      } else {\r\n      alert('Please ensure State and City are provided.')\r\n      }\r\n      }\r\n      // Obtaining and dispatching lat and long coords from google geocoding API response\r\n      const getUserCoords = (googleRes) => {\r\n      let lat = googleRes[0].geometry.location.lat // You have obtained latitude coordinate!\r\n      let long = googleRes[0].geometry.location.lng // You have obtained longitude coordinate!\r\n      props.set_lat(lat) // dispatching to store state\r\n      props.set_long(long) //dispatching to store state\r\n      }\r\n\r\n\r\n\r\n  return (\r\n    <div className='hero-container'>\r\n      \r\n        {/* <div className ='hero-btns'> */}\r\n            <Button \r\n            onClick={() => getPosition()}\r\n             style={{\r\n              top: \"-150px\",\r\n              color:\"#fff\",\r\n              width:\"200px\",\r\n              borderColor: 'white',\r\n              backgroundColor: \"#700f0f\",\r\n              padding: \"8px 26px\",\r\n              fontSize: \"18px\"\r\n          }}\r\n            >\r\n                Notify Now\r\n            </Button>\r\n            \r\n            <Button className=\"call\" \r\n            style={{\r\n              top: \"-130px\",\r\n              color:\"#fff\",\r\n              width:\"200px\",\r\n              backgroundColor: \"#d1c158\",\r\n              padding: \"8px 26px\",\r\n              fontSize: \"18px\"\r\n          }}>\r\n               Call CNU PD \r\n            </Button>\r\n            <Button\r\n             style={{\r\n              top: \"-110px\",\r\n              color:\"#fff\",\r\n              backgroundColor: \"#116319\",\r\n              width:\"200px\",\r\n              padding: \"8px 26px\",\r\n              fontSize: \"18px\"\r\n          }} href=\"/more\">\r\n               More:\r\n            </Button>\r\n          <Button\r\n          style={{\r\n            top: \"-50px\",\r\n            color:\"#fff\",\r\n            borderColor: \"#fff\",\r\n            width:\"200px\",\r\n            backgroundColor: \"transparent\",\r\n            padding: \"8px 26px\",\r\n            fontSize: \"18px\"}}\r\n            variant='outlined'\r\n        >\r\n          Tutorial <i className='far fa-play-circle' />\r\n        </Button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HeroSection"],"mappings":"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"},"metadata":{},"sourceType":"module"}